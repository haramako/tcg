#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module ShortJson
  class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     6,    20,     7,    27,    23,     9,     8,     6,    24,     7,
    10,    11,    18,     8,     6,    12,     7,    25,   -16,     9,
     8,     6,    26,     7,   nil,   nil,     9,     8,     6,   nil,
     7,   nil,   nil,    18,     8,     6,   nil,     7,   nil,   nil,
    18,     8,     6,   nil,     7,   nil,   nil,     9,     8 ]

racc_action_check = [
    25,    10,    25,    22,    13,    25,    25,     6,    15,     6,
     1,     4,     6,     6,     7,     5,     7,    16,    18,     7,
     7,    11,    19,    11,   nil,   nil,    11,    11,    12,   nil,
    12,   nil,   nil,    12,    12,    24,   nil,    24,   nil,   nil,
    24,    24,     0,   nil,     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
    39,    10,   nil,   nil,     9,    12,     4,    11,   nil,   nil,
     1,    18,    25,     0,   nil,     6,    10,   nil,    11,    16,
   nil,   nil,    -1,   nil,    32,    -3,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -3,   -19,    -1,    -2,    -5,    -7,   -11,    -3,   -17,   -18,
   -19,   -19,   -11,   -19,   -10,   -13,   -19,   -15,   -18,   -19,
    30,    -4,   -19,    -8,   -19,   -19,    -9,    -6,   -12,   -14 ]

racc_goto_table = [
    17,     2,     1,    13,    21,    28,    17,   nil,    19,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,    29 ]

racc_goto_check = [
     4,     2,     1,     6,     3,     7,     4,   nil,     2,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4 ]

racc_goto_pointer = [
   nil,     2,     1,    -7,    -6,   nil,    -3,   -19,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,   nil,    14,    15,    16 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 11, :_reduce_none,
  1, 12, :_reduce_none,
  0, 12, :_reduce_3,
  3, 13, :_reduce_4,
  1, 13, :_reduce_5,
  4, 14, :_reduce_6,
  1, 14, :_reduce_none,
  3, 14, :_reduce_8,
  3, 14, :_reduce_9,
  1, 16, :_reduce_none,
  0, 16, :_reduce_11,
  3, 17, :_reduce_12,
  1, 17, :_reduce_13,
  3, 18, :_reduce_14,
  1, 18, :_reduce_15,
  1, 19, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none ]

racc_reduce_n = 19

racc_shift_n = 30

racc_token_table = {
  false => 0,
  :error => 1,
  "," => 2,
  "(" => 3,
  ")" => 4,
  "[" => 5,
  "]" => 6,
  ":" => 7,
  :STRING => 8,
  :NUMBER => 9 }

racc_nt_base = 10

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\":\"",
  "STRING",
  "NUMBER",
  "$start",
  "program",
  "value_list_p",
  "value_list",
  "value",
  "literal",
  "args",
  "key_value_list",
  "key_value",
  "ident" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'short_json.y', 7)
  def _reduce_3(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 9)
  def _reduce_4(val, _values, result)
     result = val[2].unshift(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 10)
  def _reduce_5(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 12)
  def _reduce_6(val, _values, result)
     result = make_args([[nil,val[0]]]+val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'short_json.y', 14)
  def _reduce_8(val, _values, result)
     result = make_args(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 15)
  def _reduce_9(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'short_json.y', 18)
  def _reduce_11(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 24)
  def _reduce_12(val, _values, result)
     result = [val[0]]+val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 25)
  def _reduce_13(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 27)
  def _reduce_14(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'short_json.y', 28)
  def _reduce_15(val, _values, result)
     result = [nil, val[0]] 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module ShortJson
